import { z as functionUncurryThis, t as toObject$1, U as functionApply, k as functionCall, V as fixRegexpWellKnownSymbolLogic, f as fails$1, E as anObject$1, W as isNullOrUndefined$1, T as toIntegerOrInfinity$1, X as toLength$1, x as toString$1, S as requireObjectCoercible$1, Y as getMethod$1, Z as regexpExecAbstract, w as wellKnownSymbol$1, i as isCallable$1, $ as formatDate, R as __assign, a0 as __awaiter, a1 as __generator, a2 as __spreadArray } from './index2.js';
import { jsx, jsxs } from 'react/jsx-runtime';
import router from 'next/router.js';
import { useRegisterActions, KBarPortal, KBarPositioner, KBarAnimator, KBarSearch, useMatches, KBarResults, KBarProvider } from 'kbar';
import { useState, useEffect } from 'react';
import { s as stringMultibyte } from './string-multibyte.js';
import 'next/link.js';
import 'next-themes';
import 'next/dynamic.js';
import '@headlessui/react';
import 'next/head.js';
import 'mdx-mermaid/lib/Mermaid';
import 'clsx';

var charAt$1 = stringMultibyte.charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
var advanceStringIndex$1 = function (S, index, unicode) {
  return index + (unicode ? charAt$1(S, index).length : 1);
};

var uncurryThis$1 = functionUncurryThis;
var toObject = toObject$1;

var floor = Math.floor;
var charAt = uncurryThis$1(''.charAt);
var replace = uncurryThis$1(''.replace);
var stringSlice$1 = uncurryThis$1(''.slice);
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
var getSubstitution$1 = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice$1(str, 0, position);
      case "'": return stringSlice$1(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice$1(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};

var apply = functionApply;
var call = functionCall;
var uncurryThis = functionUncurryThis;
var fixRegExpWellKnownSymbolLogic = fixRegexpWellKnownSymbolLogic;
var fails = fails$1;
var anObject = anObject$1;
var isCallable = isCallable$1;
var isNullOrUndefined = isNullOrUndefined$1;
var toIntegerOrInfinity = toIntegerOrInfinity$1;
var toLength = toLength$1;
var toString = toString$1;
var requireObjectCoercible = requireObjectCoercible$1;
var advanceStringIndex = advanceStringIndex$1;
var getMethod = getMethod$1;
var getSubstitution = getSubstitution$1;
var regExpExec = regexpExecAbstract;
var wellKnownSymbol = wellKnownSymbol$1;

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;
var concat = uncurryThis([].concat);
var push = uncurryThis([].push);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = isNullOrUndefined(searchValue) ? undefined : getMethod(searchValue, REPLACE);
      return replacer
        ? call(replacer, searchValue, O, replaceValue)
        : call(nativeReplace, toString(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        push(results, result);
        if (!global) break;

        var matchStr = toString(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString(result[0]);
        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat([matched], captures, position, S);
          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);
          var replacement = toString(apply(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

var nameFromUrl = function nameFromUrl(url) {
  var name = url.split("/").slice(-1)[0].replace("-", " ");
  return name.charAt(0).toUpperCase() + name.slice(1);
};

var kbarActionsFromDocuments = function kbarActionsFromDocuments(docs) {
  var _a, _b, _c;
  var actions = [];
  var _loop_1 = function _loop_1(doc) {
    // excluding home path as this is defined in starting actions
    doc.url_path && actions.push({
      id: doc.url_path,
      name: (_a = doc.title) !== null && _a !== void 0 ? _a : nameFromUrl(doc.url_path),
      keywords: (_b = doc.description) !== null && _b !== void 0 ? _b : "",
      section: (_c = doc.sourceDir) !== null && _c !== void 0 ? _c : "Page",
      subtitle: doc.date && formatDate(doc.date, "en-US"),
      perform: function () {
        return router.push("/".concat(doc.url_path));
      }
    });
  };
  for (var _i = 0, docs_1 = docs; _i < docs_1.length; _i++) {
    var doc = docs_1[_i];
    _loop_1(doc);
  }
  return actions;
};

var Portal = function Portal(_a) {
  var searchDocumentsPath = _a.searchDocumentsPath;
  var _b = useState([]),
    searchActions = _b[0],
    setSearchActions = _b[1];
  useEffect(function () {
    var fetchData = function fetchData() {
      return __awaiter(void 0, void 0, void 0, function () {
        var res, json, actions;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4 /*yield*/, fetch(searchDocumentsPath)];
            case 1:
              res = _a.sent();
              return [4 /*yield*/, res.json()];
            case 2:
              json = _a.sent();
              actions = kbarActionsFromDocuments(json);
              setSearchActions(actions);
              return [2 /*return*/];
          }
        });
      });
    };

    fetchData();
  }, [searchDocumentsPath]);
  useRegisterActions(searchActions, [searchActions]);
  return jsx(KBarPortal, {
    children: jsx(KBarPositioner, __assign({
      className: "bg-gray-300/50 p-4 backdrop-blur backdrop-filter dark:bg-black/50"
    }, {
      children: jsx(KBarAnimator, __assign({
        className: "w-full max-w-xl"
      }, {
        children: jsxs("div", __assign({
          className: "overflow-hidden rounded-2xl border border-gray-100 bg-gray-50 dark:border-gray-800 dark:bg-gray-900"
        }, {
          children: [jsxs("div", __assign({
            className: "flex items-center space-x-4 p-4"
          }, {
            children: [jsx("span", __assign({
              className: "block w-5"
            }, {
              children: jsx("svg", __assign({
                className: "text-gray-400 dark:text-gray-300",
                xmlns: "http://www.w3.org/2000/svg",
                fill: "none",
                viewBox: "0 0 24 24",
                stroke: "currentColor"
              }, {
                children: jsx("path", {
                  strokeLinecap: "round",
                  strokeLinejoin: "round",
                  strokeWidth: 2,
                  d: "M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                })
              }))
            })), jsx(KBarSearch, {
              className: "h-8 w-full bg-transparent text-slate-600 placeholder-slate-400 focus:outline-none dark:text-slate-200 dark:placeholder-slate-500"
            }), jsx("span", __assign({
              className: "inline-block whitespace-nowrap rounded border border-slate-400/70 px-1.5 align-middle font-medium leading-4 tracking-wide text-slate-500 [font-size:10px] dark:border-slate-600 dark:text-slate-400"
            }, {
              children: "ESC"
            }))]
          })), jsx(RenderResults, {})]
        }))
      }))
    }))
  });
};
function RenderItem(props) {
  var item = props.item,
    active = props.active;
  return jsx("div", {
    children: typeof item === "string" ? jsx("div", __assign({
      className: "pt-3"
    }, {
      children: jsx("div", __assign({
        className: "text-primary-600 block border-t border-gray-100 px-4 pt-6 pb-2 text-xs font-semibold uppercase dark:border-gray-800"
      }, {
        children: item
      }))
    })) : jsxs("div", __assign({
      className: "block cursor-pointer px-4 py-2 text-gray-600 dark:text-gray-200 ".concat(active ? "bg-primary-600" : "bg-transparent")
    }, {
      children: [(item === null || item === void 0 ? void 0 : item.subtitle) && jsx("div", __assign({
        className: "".concat(active ? "text-gray-200" : "text-gray-400 dark:text-gray-500", " text-xs")
      }, {
        children: item.subtitle
      })), jsx("div", {
        children: item === null || item === void 0 ? void 0 : item.name
      })]
    }))
  });
}
function RenderResults() {
  var results = useMatches().results;
  if (results.length) {
    return jsx(KBarResults, {
      items: results,
      onRender: RenderItem
    });
  }
  return jsx("div", __assign({
    className: "block border-t border-gray-100 px-4 py-8 text-center text-gray-400 dark:border-gray-800 dark:text-gray-600"
  }, {
    children: "No results for your search..."
  }));
}

var KBarModal = function KBarModal(_a) {
  var searchDocumentsPath = _a.searchDocumentsPath,
    startingActions = _a.startingActions,
    children = _a.children;
  return jsxs(KBarProvider, __assign({
    actions: startingActions
  }, {
    children: [jsx(Portal, {
      searchDocumentsPath: searchDocumentsPath
    }), children]
  }));
};

var KBarSearchProvider = function KBarSearchProvider(_a) {
  var config = _a.config,
    children = _a.children;
  var defaultActions = config === null || config === void 0 ? void 0 : config.defaultActions;
  var searchDocumentsPath = "search.json";
  var startingActions = [{
    id: "homepage",
    name: "Homepage",
    keywords: "",
    section: "Home",
    perform: function () {
      return router.push("/");
    }
  }];
  if (defaultActions && Array.isArray(defaultActions)) startingActions = __spreadArray(__spreadArray([], startingActions, true), defaultActions, true);
  return KBarModal ? jsx(KBarModal, __assign({
    startingActions: startingActions,
    searchDocumentsPath: searchDocumentsPath
  }, {
    children: children
  })) : children;
};

export { KBarSearchProvider };
