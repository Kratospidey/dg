{
  "version": 3,
  "sources": ["../../../../Digital-Garden/config.js", "../../../contentlayer.config.js", "../../../config/siteConfig.js"],
  "sourcesContent": ["{}", "/* eslint import/no-unresolved: off */\nimport { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport { h } from \"hastscript\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeMathjax from \"rehype-mathjax\";\nimport rehypePrismPlus from \"rehype-prism-plus\";\nimport rehypeSlug from \"rehype-slug\";\nimport codeExtra from \"remark-code-extra\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport smartypants from \"remark-smartypants\";\nimport remarkToc from \"remark-toc\";\nimport callouts from \"@flowershow/remark-callouts\";\nimport remarkEmbed from \"@flowershow/remark-embed\";\nimport wikiLinkPlugin from \"@flowershow/remark-wiki-link\";\n\nimport { siteConfig } from \"./config/siteConfig\";\n\nconst sharedFields = {\n  title: { type: \"string\" },\n  description: { type: \"string\" },\n  image: { type: \"string\" },\n  layout: { type: \"string\", default: \"docs\" },\n  showEditLink: { type: \"boolean\" },\n  showToc: { type: \"boolean\" },\n  isDraft: { type: \"boolean\" },\n  data: { type: \"list\", of: { type: \"string\" }, default: [] },\n};\n\nconst computedFields = {\n  url_path: {\n    type: \"string\",\n    /* eslint no-underscore-dangle: off */\n    resolve: (doc) => doc._raw.flattenedPath,\n  },\n  slug: {\n    type: \"string\",\n    /* eslint no-underscore-dangle: off */\n    resolve: (doc) => doc._raw.flattenedPath.replace(/^(.+?\\/)*/, \"\"),\n  },\n  edit_url: {\n    type: \"string\",\n    resolve: (post) =>\n      siteConfig.editLinkRoot\n        ? /* eslint no-underscore-dangle: off */\n          `${siteConfig.editLinkRoot}${post._raw.sourceFilePath}/`\n        : undefined,\n  },\n};\n\nconst Page = defineDocumentType(() => ({\n  name: \"Page\",\n  filePathPattern: \"**/*.md*\",\n  contentType: \"mdx\",\n  fields: {\n    ...sharedFields,\n  },\n  computedFields,\n}));\n\nconst Blog = defineDocumentType(() => ({\n  name: \"Blog\",\n  filePathPattern: `${siteConfig.blogDir}/!(index)*.md*`,\n  contentType: \"mdx\",\n  fields: {\n    ...sharedFields,\n    layout: { type: \"string\", default: \"blog\" },\n    created: { type: \"date\", required: true },\n    authors: {\n      type: \"list\",\n      of: { type: \"string\" },\n    },\n    tags: {\n      type: \"list\",\n      of: { type: \"string\" },\n    },\n  },\n  computedFields,\n}));\n\nexport const Person = defineDocumentType(() => ({\n  name: \"Person\",\n  filePathPattern: `${siteConfig.peopleDir}/!(index)*.md*`,\n  contentType: \"mdx\",\n  fields: {\n    ...sharedFields,\n    id: {\n      type: \"string\",\n    },\n    name: {\n      type: \"string\",\n      required: true,\n    },\n    avatar: {\n      type: \"string\",\n      default: siteConfig.avatarPlaceholder,\n    },\n    email: {\n      type: \"string\",\n    },\n    twitter: {\n      type: \"string\",\n    },\n    linkedin: {\n      type: \"string\",\n    },\n    github: {\n      type: \"string\",\n    },\n  },\n  computedFields,\n}));\n\nconst contentLayerExcludeDefaults = [\n  \"node_modules\",\n  \".git\",\n  \".yarn\",\n  \".cache\",\n  \".next\",\n  \".contentlayer\",\n  \"package.json\",\n  \"tsconfig.json\",\n];\n\n/* eslint import/no-default-export: off */\nexport default makeSource({\n  contentDirPath: siteConfig.content,\n  contentDirExclude: contentLayerExcludeDefaults.concat([\n    \".flowershow\",\n    \".obsidian\",\n    ...siteConfig.contentExclude,\n  ]),\n  contentDirInclude: siteConfig.contentInclude,\n  documentTypes: [Blog, Person, Page],\n  mdx: {\n    cwd: process.cwd(),\n    remarkPlugins: [\n      remarkEmbed,\n      remarkGfm,\n      [smartypants, { quotes: false, dashes: \"oldschool\" }],\n      remarkMath,\n      callouts,\n      [wikiLinkPlugin, { markdownFolder: siteConfig.content }],\n      /** Using the code extra plugin from https://github.com/s0/remark-code-extra\n       *  to create new mermaid pre tags to use with mdx-mermaid.\n       *  rehypePrismPlus plugin modifies the pre tags and due to this mdx-mermaid\n       *  component cannot receive the values in the required format.\n       *  Refer issue https://github.com/flowershow/flowershow/issues/12 for more info.\n       */\n      [\n        codeExtra,\n        {\n          transform: (node) => {\n            if (node.type === \"code\" && node.lang === \"mermaid\") {\n              // reset values else rehype-prism-plus throws error\n              // node.type = \"\";\n              // node.lang = \"\";\n              return {\n                // create new pre tag element here for mermaid\n                after: [\n                  {\n                    type: \"element\",\n                    tagName: \"pre\",\n                    properties: {\n                      className: \"code-mermaid\",\n                    },\n                    children: [\n                      {\n                        type: \"text\",\n                        value: node.value,\n                      },\n                    ],\n                  },\n                ],\n                // remove the pre tag element created by rehype-prism-plus\n                // otherwise both will be displayed\n                transform: (n) => {\n                  const preElem = n.data.hChildren.find(\n                    (el) => el.tagName === \"pre\"\n                  );\n                  const index = n.data.hChildren.indexOf(preElem);\n                  n.data.hChildren.splice(index, 1);\n                },\n              };\n            }\n            return null;\n          },\n        },\n      ],\n      [\n        remarkToc,\n        {\n          heading: \"Table of contents\",\n          // maxDepth: \"3\",\n          tight: true,\n        },\n      ],\n    ],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypeAutolinkHeadings,\n        {\n          test(element) {\n            return (\n              [\"h2\", \"h3\", \"h4\", \"h5\", \"h6\"].includes(element.tagName) &&\n              element.properties?.id !== \"table-of-contents\" &&\n              element.properties?.className !== \"blockquote-heading\"\n            );\n          },\n          content() {\n            return [\n              h(\n                \"svg\",\n                {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  fill: \"#ab2b65\",\n                  viewBox: \"0 0 20 20\",\n                  className: \"w-5 h-5\",\n                },\n                [\n                  h(\"path\", {\n                    fillRule: \"evenodd\",\n                    clipRule: \"evenodd\",\n                    d: \"M9.493 2.853a.75.75 0 00-1.486-.205L7.545 6H4.198a.75.75 0 000 1.5h3.14l-.69 5H3.302a.75.75 0 000 1.5h3.14l-.435 3.148a.75.75 0 001.486.205L7.955 14h2.986l-.434 3.148a.75.75 0 001.486.205L12.456 14h3.346a.75.75 0 000-1.5h-3.14l.69-5h3.346a.75.75 0 000-1.5h-3.14l.435-3.147a.75.75 0 00-1.486-.205L12.045 6H9.059l.434-3.147zM8.852 7.5l-.69 5h2.986l.69-5H8.852z\",\n                  }),\n                ]\n              ),\n            ];\n          },\n        },\n      ],\n      rehypeMathjax,\n      [rehypePrismPlus, { ignoreMissing: true }],\n    ],\n  },\n});\n", "import { defaultConfig } from \"@flowershow/core\";\nimport userConfig from \"../content/config\";\n\nexport const siteConfig = {\n  ...defaultConfig,\n  ...userConfig,\n  // prevent theme object overrides for\n  // values not provided in userConfig\n  theme: {\n    ...defaultConfig.theme,\n    ...userConfig?.theme,\n  },\n};\n"],
  "mappings": "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",
  "names": ["userConfig"]
}
