// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Blog = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Blog'
  title?: string | undefined
  description?: string | undefined
  image?: string | undefined
  layout: string
  showEditLink?: boolean | undefined
  showToc?: boolean | undefined
  isDraft?: boolean | undefined
  data: string[]
  created: IsoDateTimeString
  authors?: string[] | undefined
  tags?: string[] | undefined
  /** MDX file body */
  body: MDX
  url_path: string
  slug: string
  edit_url: string
}

export type Page = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Page'
  title?: string | undefined
  description?: string | undefined
  image?: string | undefined
  layout: string
  showEditLink?: boolean | undefined
  showToc?: boolean | undefined
  isDraft?: boolean | undefined
  data: string[]
  /** MDX file body */
  body: MDX
  url_path: string
  slug: string
  edit_url: string
}

export type Person = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Person'
  title?: string | undefined
  description?: string | undefined
  image?: string | undefined
  layout: string
  showEditLink?: boolean | undefined
  showToc?: boolean | undefined
  isDraft?: boolean | undefined
  data: string[]
  id?: string | undefined
  name: string
  avatar: string
  email?: string | undefined
  twitter?: string | undefined
  linkedin?: string | undefined
  github?: string | undefined
  /** MDX file body */
  body: MDX
  url_path: string
  slug: string
  edit_url: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Blog | Page | Person
export type DocumentTypeNames = 'Blog' | 'Page' | 'Person'

export type NestedTypes = never
export type NestedTypeNames = never


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Blog: Blog
  Page: Page
  Person: Person
}

export type NestedTypeMap = {

}

 